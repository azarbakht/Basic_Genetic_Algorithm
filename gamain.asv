populationSize = 100; % Even population size assumed in this program.
numberOfGenes = 50;
crossoverProbability = 0.8;
mutationProbability = 0.01;
tournamentSelectionParameter = 0.75;
variableRange = 5.0;
numberOfGenerations = 200;
fitness = zeros(populationSize,1);
nEvaluationsPerformed = 0;

fitnessFigureHandle = figure;
hold on;
set(fitnessFigureHandle, 'Position', [50,50,500,200]);
set(fitnessFigureHandle, 'DoubleBuffer','on');
axis([1 numberOfGenerations 2.5 3]);
bestPlotHandle = plot(1:numberOfGenerations,zeros(1,numberOfGenerations));
textHandle = text(30,2.6,sprintf('Best: %4.3f', 0.0));
hold off;
drawnow;

surfaceFigureHandle = figure;
hold on;
set(surfaceFigureHandle, 'DoubleBuffer','on');
delta = 0.1;
limit = fix(2*variableRange/delta) + 1;
[xValues,yValues] = meshgrid(-variableRange:delta:variableRange,-variableRange:delta:variableRange);
zValues = zeros(limit,limit);
for j = 1:limit
for k = 1:limit
zValues(j,k) = EvaluateIndividual([xValues(j,k) yValues(j,k)]);
end
end
surfl(xValues,yValues,zValues)
colormap gray;
shading interp;
view([-7 -9 10]);
decodedPopulation = zeros(populationSize,2);
populationPlotHandle = plot3(decodedPopulation(:,1), decodedPopulation(:,2), fitness(:),'kp');
hold off;
drawnow;

population = InitializePopulation(populationSize, numberOfGenes);
for iGeneration = 1:numberOfGenerations
maximumFitness = 0.0; % Assumes non-negative fitness values!
for i = 1:populationSize
chromosome = population(i,:);
    % Note! Minimization:
    fitness(i) = 1.0/EvaluateIndividual(parameterValues);
    nEvaluationsPerformed = nEvaluationsPerformed+1; 
    if (fitness(i) > maxFitness) 
       maxFitness = fitness(i);
       iBestIndividual = i;
       bestParameterValues = parameterValues;
       maxFitness; nEvaluationsPerformed;
    end
  end

  plotVector = get(bestPlot,'YData');
  plotVector(generation) = maxFitness;
  set(bestPlot,'YData',plotVector);
  set(textLabel,'String',sprintf('best: %4.3f',maxFitness)); 
  drawnow;
 
  temporaryPopulation = population;  
  for i = 1:2:populationSize
    i1 = TournamentSelect(fitness,tournamentProbability);
    i2 = TournamentSelect(fitness,tournamentProbability);
    r = rand;
    if (r < crossoverProbability) 
      newIndividual = Cross(i1,i2);
      temporaryPopulation(i,:) = newIndividual(1,:);
      temporaryPopulation(i+1,:) = newIndividual(2,:);
    else
      temporaryPopulation(i,:) = population(i1,:);
      temporaryPopulation(i+1,:) = population(i2,:);
    end
  end
  temporaryPopulation(1,:) = population(iBestIndividual,:);
  for i = 2:populationSize
    tempIndividual = Mutate(temporaryPopulation(i,:),mutationProbability);
    temporaryPopulation(i,:) = tempIndividual;
  end
  population = temporaryPopulation;
end